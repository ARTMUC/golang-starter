{
  "swagger": "2.0",
  "info": {
    "title": "Swagger API",
    "version": "1.0",
    "contact": {},
    "license": {}
  },
  "paths": {
    "/auth/register": {
      "post": {
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": null,
        "summary": "",
        "operationId": "post-/auth/register",
        "parameters": [
          {
            "type": "",
            "description": "body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth.RegisterInput"
            }
          }
        ],
        "responses": {}
      }
    },
    "/auth/signin": {
      "post": {
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": null,
        "summary": "",
        "operationId": "post-/auth/signin",
        "parameters": [
          {
            "type": "",
            "description": "body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/auth.LoginInput"
            }
          }
        ],
        "responses": {}
      }
    },
    "/post/": {
      "get": {
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": null,
        "summary": "",
        "operationId": "get-/post/",
        "parameters": [
          {
            "type": "string",
            "description": "{'$and': [ {'title': { '$cont':'cul' } } ]}",
            "name": "s",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "fields to select eg: name,age",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "type": "integer",
            "description": "page of pagination",
            "name": "page",
            "in": "query",
            "required": false
          },
          {
            "type": "integer",
            "description": "limit of pagination",
            "name": "limit",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "join relations eg: category, parent",
            "name": "join",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "filters eg: name||$eq||ad price||$gte||200",
            "name": "filter",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "filters eg: created_at,desc title,asc",
            "name": "sort",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/crud.PaginationResponse[github.com/golang-starter/domain/models.Post]"
            }
          }
        }
      },
      "post": {
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": null,
        "summary": "",
        "operationId": "post-/post/",
        "parameters": [
          {
            "type": "",
            "description": "body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post.CreateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Post"
            }
          }
        }
      }
    },
    "/post/:id": {
      "delete": {
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": null,
        "summary": "",
        "operationId": "delete-/post/:id",
        "parameters": [
          {
            "type": "integer",
            "description": "",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      },
      "get": {
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": null,
        "summary": "",
        "operationId": "get-/post/:id",
        "parameters": [
          {
            "type": "integer",
            "description": "",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Post"
            }
          }
        }
      },
      "patch": {
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "tags": null,
        "summary": "",
        "operationId": "patch-/post/:id",
        "parameters": [
          {
            "type": "integer",
            "description": "",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "",
            "description": "body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/post.UpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Post"
            }
          }
        }
      }
    }
  },
  "basePath": "/",
  "host": "",
  "definitions": null,
  "schemes": [
    "http",
    "https"
  ]
}